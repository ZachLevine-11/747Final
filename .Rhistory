##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
L##Plot a calibrated simulation, changing the provinceName to whatever we want it to be..
test_calib_plot <- function(provinceName, calibslist = goodcalibs, reportlist = splitintervalCases, deathlist = splitintervaldeaths, hosplist = splitintervalhosp){
dd <-  bind_rows(splitintervalCases[[provinceName]], splitintervaldeaths[[provinceName]])
##We might need to order by date, so it's safer to.
dd <- dd[order(anytime::anydate(dd$date)),]
plot(calibslist[[provinceName]], data = dd, predict_args=list(keep_vars=c("report", "death")))
}
forecast_province <- function(provinceName,
calibsList = goodcalibs,
scenario = 1,
sd_ld = anytime::anydate("2020-08-01"),
ed_ld = anytime::anydate("2021-12-18"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-15"),
flu_end = anytime::anydate("2021-02-28"),
relbeta0_peak = 2,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
##Plot a calibrated simulation, changing the provinceName to whatever we want it to be..
test_calib_plot <- function(provinceName, calibslist = goodcalibs, reportlist = splitintervalCases, deathlist = splitintervaldeaths, hosplist = splitintervalhosp){
dd <-  bind_rows(splitintervalCases[[provinceName]], splitintervaldeaths[[provinceName]])
##We might need to order by date, so it's safer to.
dd <- dd[order(anytime::anydate(dd$date)),]
plot(calibslist[[provinceName]], data = dd, predict_args=list(keep_vars=c("report", "death")))
}
##Test a forecast by plotting it on the same graph as the observed report data and the calibrate to it.
test_forecast_plot <- function(provinceName, sim = forecast_province(provinceName)){
plot(sim, drop_states = c("S", "R", "I", "cumRep", "E", "X", "D", "incidence", "ICU", "H"))
}
goodcalibs <- loadcalibs()
on1 <- forecast_province("ON")
forecast_province <- function(provinceName,
calibsList = goodcalibs,
sd = anytime::anydate("2020-08-01"),
ed = anytime::anydate("2021-12-18"),
scenario = 1,
sd_ld = anytime::anydate("2020-12-18"),
ed_ld = anytime::anydate("2021-01-29"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-15"),
flu_end = anytime::anydate("2021-02-28"),
relbeta0_peak = 2,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
on1 <- forecast_province("ON")
test_forecast_plot("ON", sim = on1)
on4 <- forecast_province("ON", scenario = 4)
test_forecast_plot(sim = on4)
forecast_province <- function(provinceName,
calibsList = goodcalibs,
sd = anytime::anydate("2020-08-01"),
ed = anytime::anydate("2021-12-18"),
scenario = 1,
sd_ld = anytime::anydate("2020-12-18"),
ed_ld = anytime::anydate("2021-01-29"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-15"),
flu_end = anytime::anydate("2021-02-28"),
relbeta0_peak = 1.2,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
on4 <- forecast_province("ON", scenario = 4)
test_forecast_plot(sim = on4)
test_forecast_plot(sim = on4) + geom_line()
test_forecast_plot(sim = on4) + geom_vline(NULL)
test_forecast_plot(sim = on4) + geom_vline()
forecast_province <- function(provinceName,
calibsList = goodcalibs,
sd = anytime::anydate("2020-08-01"),
ed = anytime::anydate("2021-12-18"),
scenario = 1,
sd_ld = anytime::anydate("2020-12-18"),
ed_ld = anytime::anydate("2021-01-29"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-15"),
flu_end = anytime::anydate("2021-03-15"),
relbeta0_peak = 1.2,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
on4 <- forecast_province("ON", scenario = 4)
test_forecast_plot(sim = on4)
forecast_province <- function(provinceName,
calibsList = goodcalibs,
sd = anytime::anydate("2020-08-01"),
ed = anytime::anydate("2021-12-18"),
scenario = 1,
sd_ld = anytime::anydate("2020-12-18"),
ed_ld = anytime::anydate("2021-01-29"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-15"),
flu_end = anytime::anydate("2021-03-15"),
relbeta0_peak = 1.1,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
##Test a forecast by plotting it on the same graph as the observed report data and the calibrate to it.
test_forecast_plot <- function(provinceName, sim = forecast_province(provinceName)){
plot(sim, drop_states = c("S", "R", "I", "cumRep", "E", "X", "D", "incidence", "ICU", "H"), show_times = FALSE)
}
on4 <- forecast_province("ON", scenario = 4)
test_forecast_plot(sim = on4)
forecast_province <- function(provinceName,
calibsList = goodcalibs,
sd = anytime::anydate("2020-08-01"),
ed = anytime::anydate("2021-12-18"),
scenario = 1,
sd_ld = anytime::anydate("2020-12-18"),
ed_ld = anytime::anydate("2021-01-29"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-10"),
flu_end = anytime::anydate("2021-03-15"),
relbeta0_peak = 1.2,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
on4 <- forecast_province("ON", scenario = 4)
test_forecast_plot(sim = on4)
forecast_province <- function(provinceName,
calibsList = goodcalibs,
sd = anytime::anydate("2020-08-01"),
ed = anytime::anydate("2021-12-18"),
scenario = 1,
sd_ld = anytime::anydate("2020-12-18"),
ed_ld = anytime::anydate("2021-01-29"),
lockdown_beta0 = 0.5,
lockdown_relax = 1,
flu_start = anytime::anydate("2021-01-10"),
flu_end = anytime::anydate("2021-04-01"),
relbeta0_peak = 1.2,
phi2_1 = 0.1,
phi2_2 = 0.5,
isom_init = 500000,
isos_init = 700000){
calib <- calibsList[[provinceName]]
ff <- calib$forecast_args
pars <- ff$base_params
##Do these manually I guess.
#pars[["E0"]] <- coef(calib, "fitted")$params["E0"]
#pars[["beta0"]] <- coef(calib, "fitted")$params["beta0"]
#pars[["phi1"]] <- coef(calib, "fitted")$params["phi1"]
##The below line does the same thing. Lee, I'm leaving the above three in there so you can see.
pars[names(coef(calib, "fitted")$params)] <- coef(calib, "fitted")$params
##Stil don't now why this didn't work.
#pars <- update(pars, ff$opt_pars$params)
##The only thing that changes between scenarios is the time_pars.
if (scenario == 1){
##Status quo
time_pars <- NULL
}
else if (scenario == 2){
##Lockdown then relax six weeks after.
##Six weeks after is Jan 29th, 2021
time_pars <- data.frame(Date=c(sd_ld, ed_ld),
Symbol=c("beta0","beta0"),
Relative_value=c(lockdown_beta0, lockdown_relax),
stringsAsFactors=FALSE)
}
else if (scenario == 3){
##ICU's fill up and then clear exactly a month later.
time_pars <- data.frame(Date=c("2020-01-15", "2021-02-15"),
Symbol=c("phi2", "phi2"),
Relative_value=c(phi2_1, phi2_2),
stringsAsFactors=FALSE)
}
else if (scenario == 4){
## Flu & Covid
dates <- seq(ymd(flu_start),ymd(flu_end), by="days")
L <- length(dates)-1
t <- (pi/L)*seq(0,L)
change_beta0 <- (relbeta0_peak-1)*sin(t)+1
time_pars <- data.frame(Date=dates,
Symbol="beta0",
Relative_value=change_beta0,
stringsAsFactors=FALSE)
}
else{
}
sim <- run_sim(pars, start_date = sd, end_date = ed, params_timevar = time_pars)
return(sim)
}
on4 <- forecast_province("ON", scenario = 4)
> test_forecast_plot(sim = on4)
on4 <- forecast_province("ON", scenario = 4)
test_forecast_plot(sim = on4)
